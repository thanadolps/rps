name: Release Please

on:
  push:
    branches:
      - main

permissions:
  packages: read
  contents: write
  pull-requests: write
  id-token: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      web--release_created: ${{ steps.release.outputs.web--release_created }}
      web--tag_name: ${{ steps.release.outputs.web--tag_name }}
      golang-webhook--release_created: ${{ steps.release.outputs['golang/webhook--release_created'] }}
      golang-webhook--tag_name: ${{ steps.release.outputs['golang/webhook--tag_name'] }}
      releases_created: ${{ steps.release.outputs.releases_created }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Release Please
        id: release
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ secrets.TOKEN }}
          config-file: .github/release-please/config.json
          manifest-file: .github/release-please/manifest.json
          target-branch: main

      - name: Print debug release-please
        run: |
          echo "Web release created: ${{ steps.release.outputs.web--release_created }}"
          echo "Web tag name: ${{ steps.release.outputs.web--tag_name }}"
          echo "Webhook release created: ${{ steps.release.outputs['golang/webhook--release_created'] }}"
          echo "Webhook tag name: ${{ steps.release.outputs['golang/webhook--tag_name'] }}"
          echo "Releases created: ${{ steps.release.outputs.releases_created }}"

  deploy-web-to-production:
    needs: release-please
    if: needs.release-please.outputs.web--release_created == 'true'
    uses: ./.github/workflows/release.yml
    with:
      component: web-v2
      override-tag: ${{ needs.release-please.outputs.web--tag_name }}
      environment: production

  deploy-webhook-to-production:
    needs: release-please
    if: needs.release-please.outputs.golang-webhook--release_created == 'true'
    uses: ./.github/workflows/release.yml
    with:
      component: webhook
      override-tag: ${{ needs.release-please.outputs.golang-webhook--tag_name }}
      environment: production

  merge-back-to-staging:
    needs: release-please
    if: needs.release-please.outputs.releases_created == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main

      - name: Merge main back to staging
        uses: devmasx/merge-branch@master
        with:
          type: now
          from_branch: main
          target_branch: staging
          github_token: ${{ secrets.TOKEN }}
          message: "Merge main back to staging after production release"
