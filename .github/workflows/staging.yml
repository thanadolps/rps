name: Staging Workflow

on:
  push:
    branches:
      - staging

permissions:
  packages: read
  contents: write
  pull-requests: write
  id-token: write

jobs:
  extract-release-info:
    runs-on: ubuntu-latest
    outputs:
      release-info: ${{ steps.extract.outputs.release-info }}
      web-changed: ${{ steps.extract.outputs.web-changed }}
      webhook-changed: ${{ steps.extract.outputs.webhook-changed }}
      has-changes: ${{ steps.extract.outputs.has-changes }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install release-please CLI
        run: npm install -g release-please

      - name: Extract release information using dry-run
        id: extract
        run: |
          # Use release-please in dry-run mode to extract what would be released
          echo "Extracting release information..."

          # Run release-please in dry-run mode
          release_output=$(release-please release-pr \
            --token="${{ secrets.GITHUB_TOKEN }}" \
            --repo-url="${{ github.repository }}" \
            --target-branch=staging \
            --config-file=.github/release-please/config.json \
            --manifest-file=.github/release-please/manifest.json \
            --dry-run \
            --debug 2>&1 || true)

          echo "Release-please output:"
          echo "$release_output"

          # Check if there are any changes to release
          # Look for indicators that release-please would create releases
          if echo "$release_output" | grep -q "Would open [1-9]" || echo "$release_output" | grep -q "updating from.*to"; then
            echo "has-changes=true" >> $GITHUB_OUTPUT
            
            # Extract component information
            web_changed="false"
            webhook_changed="false"
            
            # Check for web component changes (look for web path or demo-typescript-app)
            if echo "$release_output" | grep -q "web/" || echo "$release_output" | grep -q "demo-typescript-app"; then
              web_changed="true"
            fi
            
            # Check for webhook component changes (look for golang/webhook path)
            if echo "$release_output" | grep -q "golang/webhook"; then
              webhook_changed="true"
            fi
            
            echo "web-changed=$web_changed" >> $GITHUB_OUTPUT
            echo "webhook-changed=$webhook_changed" >> $GITHUB_OUTPUT
            
            # Create a summary of changes for the PR description
            release_info="## Staging to Main Merge Request\n\nThis PR contains the following changes ready for release:\n\n"
            
            if [ "$web_changed" = "true" ]; then
              release_info="${release_info}- üåê **Web Component**: Updated with new features/fixes\n"
            fi
            
            if [ "$webhook_changed" = "true" ]; then
              release_info="${release_info}- üîó **Webhook Component**: Updated with new features/fixes\n"
            fi
            
            release_info="${release_info}\nGenerated automatically by staging workflow on $(date)\n\n**Next Steps:**\n1. Review the changes in this PR\n2. Merge this PR to trigger production release\n3. Production deployment will be handled automatically"
            
            # Escape newlines for GitHub output
            release_info="${release_info//$'\n'/'%0A'}"
            echo "release-info=$release_info" >> $GITHUB_OUTPUT
          else
            echo "has-changes=false" >> $GITHUB_OUTPUT
            echo "web-changed=false" >> $GITHUB_OUTPUT
            echo "webhook-changed=false" >> $GITHUB_OUTPUT
            echo "release-info=No changes detected for release" >> $GITHUB_OUTPUT
          fi

  upsert-merge-to-main-pr:
    needs: extract-release-info
    if: needs.extract-release-info.outputs.has-changes == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout staging branch
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
          token: ${{ secrets.TOKEN }}

      - name: Create/Update Merge to Main PR
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.TOKEN }}
          branch: merge-staging-to-main
          base: main
          title: "üöÄ Merge staging to main"
          body: ${{ needs.extract-release-info.outputs.release-info }}
          labels: |
            automated
            staging-to-main
          assignees: ${{ github.actor }}
          draft: false

  deploy-web-to-staging:
    needs: extract-release-info
    if: needs.extract-release-info.outputs.web-changed == 'true'
    uses: ./.github/workflows/release.yml
    with:
      component: web-v2
      environment: staging
      publish: true
      deploy: true

  deploy-webhook-to-staging:
    needs: extract-release-info
    if: needs.extract-release-info.outputs.webhook-changed == 'true'
    uses: ./.github/workflows/release.yml
    with:
      component: webhook
      environment: staging
      publish: true
      deploy: true

  notify-completion:
    needs:
      [
        extract-release-info,
        upsert-merge-to-main-pr,
        deploy-web-to-staging,
        deploy-webhook-to-staging,
      ]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Notify workflow completion
        run: |
          echo "## Staging Workflow Completed"
          echo "- Changes detected: ${{ needs.extract-release-info.outputs.has-changes }}"
          echo "- Web component changed: ${{ needs.extract-release-info.outputs.web-changed }}"
          echo "- Webhook component changed: ${{ needs.extract-release-info.outputs.webhook-changed }}"

          if [ "${{ needs.extract-release-info.outputs.has-changes }}" = "true" ]; then
            echo "‚úÖ Merge to main PR created/updated"
            echo "‚úÖ Staging deployment initiated for changed components"
          else
            echo "‚ÑπÔ∏è No changes detected, no action taken"
          fi
